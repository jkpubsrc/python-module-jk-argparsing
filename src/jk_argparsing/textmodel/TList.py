


import typing






class TList(object):

	################################################################################################################################
	## Constructor
	################################################################################################################################

	#
	# Constructor method.
	#
	def __init__(self, *items):
		assert isinstance(items, (tuple,list))
		for item in items:
			assert isinstance(item, str)

		self.__items = items
	#

	################################################################################################################################
	## Public Properties
	################################################################################################################################

	@property
	def items(self) -> typing.List[str]:
		return self.__items
	#

	################################################################################################################################
	## Helper Methods
	################################################################################################################################

	################################################################################################################################
	## Public Methods
	################################################################################################################################

#









